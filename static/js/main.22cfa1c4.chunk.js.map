{"version":3,"sources":["components/tile/Tile.js","components/tileList/TileList.js","components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["Tile","props","pointArray","Object","values","datapoint","map","point","index","className","TileList","items","data","ContactPicker","contacts","onChange","e","setCurrentContact","target","value","disabled","selected","x","AppointmentForm","console","log","Date","toLocaleDateString","split","day","month","year","padStart","getTodayString","for","currentTitle","setCurrentTitle","type","id","required","currentDate","setCurrentDate","currentTime","setCurrentTime","style","backgroundColor","onClick","handleSubmit","AppointmentsPage","useState","currentContact","preventDefault","addAppointment","appointments","ContactForm","onSubmit","currentName","setCurrentName","currentEmail","setCurrentEmail","currentPhone","setCurrentPhone","ContactsPage","duplicate","setDuplicate","useEffect","i","length","name","addContact","alert","border","height","width","App","email","phone","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","title","contact","date","time","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22cfa1c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Tile = (props) => {\r\n\r\n  const pointArray = Object.values(props.datapoint)\r\n\r\n    \r\n  return (\r\n  \r\n    <div>\r\n      {pointArray.map((point,index) => <p className = {index === 0 ? 'tile-title' : 'tile'}>{point}</p>)}\r\n    </div>\r\n   \r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Tile} from '../tile/Tile.js';\r\n\r\nexport const TileList = (props) => {\r\n  \r\n  const dataSet = props.data\r\n \r\n\r\n  const items = dataSet.map(datapoint => <Tile datapoint = {datapoint}/>);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {items}\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n\r\n  const contacts = props.contacts.map(Object.values);\r\n\r\n  return (\r\n    \r\n    <select onChange = {(e) => props.setCurrentContact(e.target.value)} >\r\n      <option disabled selected>choose contact</option>\r\n      {contacts.map((x) => <option>{x[0]}</option>)}\r\n    </select>\r\n    \r\n  );\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {ContactPicker} from '../contactPicker/ContactPicker.js'\r\n\r\nexport const AppointmentForm = (props) => {\r\n \r\n  const getTodayString = () => {\r\n    const [day, month, year] = new Date()\r\n      .toLocaleDateString(\"en-GB\")\r\n      .split(\"/\");\r\n    return `${day.padStart(2, \"0\")}-${month.padStart(2, \"0\")}-${year}`;\r\n  };\r\n\r\n  console.log(getTodayString())\r\n\r\n  return (\r\n    <form >\r\n      <label for = 'title'>Title</label>\r\n      <input value = {props.currentTitle}  onChange = {(e) => props.setCurrentTitle(e.target.value)} type = 'text' id = 'title'required></input>\r\n\r\n      <label for = 'contact' >Contact</label>\r\n      <ContactPicker setCurrentContact = {props.setCurrentContact} contacts = {props.contacts}/>\r\n\r\n      <label for = 'date'>Date</label>\r\n      <input value = {props.currentDate} onChange = {(e) => props.setCurrentDate(e.target.value)}  type = 'date' id = 'date' required></input> \r\n\r\n      <label for = 'time'>Time</label>\r\n      <input value = {props.currentTime} onChange = {(e) => props.setCurrentTime(e.target.value)}  type = 'time' id = 'time' required></input> \r\n\r\n\r\n      \r\n\r\n      <input style = {{backgroundColor: 'black'}} value = 'add' type = 'submit' onClick = {props.handleSubmit}></input>\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React , {useState} from \"react\";\r\nimport {TileList} from '../../components/tileList/TileList.js';\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm.js\";\r\n\r\n\r\nexport const AppointmentsPage = (props) => {\r\n\r\n  const[currentTitle,setCurrentTitle] = useState('');\r\n  const[currentContact,setCurrentContact] = useState('');\r\n  const[currentDate,setCurrentDate] = useState('');\r\n  const[currentTime,setCurrentTime] = useState('');\r\n   \r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addAppointment(currentTitle,currentContact,currentDate,currentTime)\r\n\r\n    setCurrentTitle('');\r\n    setCurrentContact('');\r\n    setCurrentDate('');\r\n    setCurrentTime('');\r\n   \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n            currentTitle = {currentTitle}\r\n            currentContact = {currentContact}       \r\n            currentDate = {currentDate}\r\n            currentTime = {currentTime}\r\n            setCurrentTitle = {setCurrentTitle}\r\n            setCurrentContact = {setCurrentContact}\r\n            setCurrentDate = {setCurrentDate}\r\n            setCurrentTime = {setCurrentTime}\r\n\r\n            handleSubmit = {handleSubmit}\r\n            contacts = {props.contacts}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList data = {props.appointments}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = (props) => {\r\n  return (\r\n\r\n    <form onSubmit = {props.handleSubmit}>\r\n      <label for = 'name'>Name</label>\r\n      <input value = {props.currentName}  onChange = {(e) => props.setCurrentName(e.target.value)} type = 'text' id = 'name'></input>\r\n\r\n      <label for = 'email'>Email</label>\r\n      <input value = {props.currentEmail} onChange = {(e) => props.setCurrentEmail(e.target.value)}  type = 'email' id = 'email'></input>\r\n\r\n      <label for = 'phone'>Phone</label>\r\n      <input value = {props.currentPhone} onChange = {(e) => props.setCurrentPhone(e.target.value)}  type = 'tel' id = 'phone'></input> \r\n      {/* todo: add regex */}\r\n\r\n      <input style = {{backgroundColor: 'black'}} value = 'add' type = 'submit'/>\r\n    </form>\r\n\r\n  );\r\n};\r\n","import React,  {useState,useEffect} from \"react\";\r\nimport {ContactForm} from '../../components/contactForm/ContactForm.js';\r\nimport {TileList} from '../../components/tileList/TileList.js';\r\n\r\n\r\nexport const ContactsPage = (props) => {\r\n  \r\n  const[currentName,setCurrentName] = useState('');\r\n  const[currentEmail,setCurrentEmail] = useState('');\r\n  const[currentPhone, setCurrentPhone] = useState('');\r\n  const[duplicate,setDuplicate] = useState(false);\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      for(let i = 0; i < props.contacts.length; i++ ){\r\n        if(props.contacts[i].name === currentName){\r\n          setDuplicate(true);\r\n        }\r\n        else setDuplicate(false);\r\n\r\n      }\r\n    }, [props.addContact, currentName, props.contacts]\r\n  )\r\n \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(!duplicate){\r\n      props.addContact(currentName,currentEmail,currentPhone);\r\n     \r\n    }\r\n    else{\r\n      alert('A contact with this name has already been added. Please check if the contact list already contains your contact or if you made any spelling errors.')\r\n     \r\n      setCurrentName('');\r\n      setCurrentEmail('');\r\n      setCurrentPhone('');\r\n      \r\n      setDuplicate(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n            currentName = {currentName} \r\n            currentEmail = {currentEmail} \r\n            currentPhone = {currentPhone} \r\n            setCurrentName = {setCurrentName} \r\n            setCurrentEmail = {setCurrentEmail} \r\n            setCurrentPhone = {setCurrentPhone}\r\n            handleSubmit = {handleSubmit} />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList style = {{border: 'solid 1px red', height: '100px', width: '200px'}} data = {props.contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const[contacts,setContacts] = useState([{name: 'Bobbie Stokes', email: 'BStokes@gmail.com', phone: '061627231'},{name: 'Milli Heaton', email: 'MilliHeaton@gmail.com', phone: '0619260140'}])\r\n  const[appointments,setAppointments] = useState([])\r\n\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  const addContact = (name,phone,email) => {\r\n    setContacts([...contacts,{name,phone,email}])\r\n  }\r\n\r\n  const addAppointment = (title,contact,date,time) => {\r\n    setAppointments([...appointments,{title,contact,date,time}])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n   \r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/Appointment-Planner\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage addContact = {addContact} contacts = {contacts} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n             <AppointmentsPage addAppointment = {addAppointment} appointments = {appointments} contacts = {contacts} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}